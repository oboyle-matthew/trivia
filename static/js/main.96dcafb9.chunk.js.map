{"version":3,"sources":["components/QuestionCreator.js","components/Questions.js","components/LevenshteinDistance.js","components/Host.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","QuestionCreator","props","addQuestion","state","question","answerType","possibleAnswers","newAnswer","length","push","setState","changeQuestion","e","target","value","changeNewAnswer","changeAnswerType","addPossibleAnswer","toLowerCase","this","style","border","onChange","placeholder","height","width","dataSource","renderItem","item","Item","onPressEnter","onClick","React","Component","Questions","updateAnswer","i","answers","submit","questions","results","score","forEach","index","answer","undefined","type","indexOf","join","filteredAnswers","filter","a","includes","map","elem","marginBottom","display","flexDirection","calculate","s1","b","s2","j","matrix","charAt","Math","min","ans","similar","updates1","trim","updates2","id","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firstTime","Host","questionsRef","set","self","app","initializeApp","firebase","database","ref","on","snapshot","keys","Object","val","key","q","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0TAGQA,EAAWC,IAAXD,OAEaE,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,YAAc,WAAO,IAAD,EAC2C,EAAKC,MAA1DC,EADU,EACVA,SAAUC,EADA,EACAA,WAAYC,EADZ,EACYA,gBAAiBC,EAD7B,EAC6BA,UACzCA,EAAUC,OAAS,GACnBF,EAAgBG,KAAKF,GAEzB,EAAKN,MAAMC,YAAYE,EAAUC,EAAYC,GAC7C,EAAKI,SAAS,CACVN,SAAU,GACVE,gBAAiB,GACjBC,UAAW,MAnBA,EAuBnBI,eAAiB,SAACC,GACd,EAAKF,SAAS,CACVN,SAAUQ,EAAEC,OAAOC,SAzBR,EA6BnBC,gBAAkB,SAACH,GACf,EAAKF,SAAS,CACVH,UAAWK,EAAEC,OAAOC,SA/BT,EAmCnBE,iBAAmB,SAACJ,GAChB,EAAKF,SAAS,CACVL,WAAYO,KArCD,EAyCnBK,kBAAoB,SAACL,GAAO,IAChBN,EAAoB,EAAKH,MAAzBG,gBACR,EAAKI,SAAS,CACVJ,gBAAgB,GAAD,mBAAMA,GAAN,CAAuBM,EAAEC,OAAOC,MAAMI,gBACrDX,UAAW,MA3Cf,EAAKJ,MAAQ,CACTC,SAAU,GACVC,WAAY,UACZC,gBAAiB,GACjBC,UAAW,IANA,E,qDAiDT,IAAD,EACwDY,KAAKhB,MAA1DC,EADH,EACGA,SAAUC,EADb,EACaA,WAAYC,EADzB,EACyBA,gBAAiBC,EAD1C,EAC0CA,UAC/C,OACI,yBAAKa,MAAO,CAACC,OAAQ,oBACjB,mEACA,6BACI,0CAAmB,kBAAC,IAAD,CAAOP,MAAOV,EAAUkB,SAAUH,KAAKR,eAAgBY,YAAY,WAAWH,MAAO,CAACI,OAAQ,MACjH,6CAAsB,kBAAC,IAAD,CAAQV,MAAOT,EAAYe,MAAO,CAACK,MAAO,IAAKD,OAAQ,IAAKF,SAAUH,KAAKH,kBAC7F,kBAAClB,EAAD,CAAQgB,MAAM,WAAd,iBACA,kBAAChB,EAAD,CAAQgB,MAAM,YAAd,gBAEJ,6BACA,kDAA2B,6BACK,IAA3BR,EAAgBE,OAAe,2BAA6B,kBAAC,IAAD,CACzDkB,WAAYpB,EACZqB,WAAY,SAAAC,GAAI,OACZ,kBAAC,IAAKC,KAAN,KAAYD,MAIpB,8EAEI,kBAAC,IAAD,CAAOR,MAAO,CAACK,MAAO,KAAMK,aAAcX,KAAKF,kBAAmBH,MAAOP,EAAWe,SAAUH,KAAKJ,gBAAiBQ,YAAY,cAK5I,4BAAQQ,QAASZ,KAAKjB,aAAtB,Y,GA7E6B8B,IAAMC,WCA9BC,GAFFnC,IAAXD,O,kDAGJ,WAAYG,GAAQ,IAAD,8BACf,cAAMA,IAgBVkC,aAAe,SAACvB,EAAGwB,GAAO,IAChBC,EAAY,EAAKlC,MAAjBkC,QACNA,EAAQD,GAAKxB,EAAEC,OAAOC,MAAMI,cAC5B,EAAKR,SAAS,CACV2B,QAASA,KArBE,EAyBnBC,OAAS,WAAO,IACJC,EAAc,EAAKtC,MAAnBsC,UADG,EAEgB,EAAKpC,MAA1BkC,EAFK,EAELA,QAASG,EAFJ,EAEIA,QACXC,EAAQ,EACZF,EAAUG,SAAQ,SAACtC,EAAUuC,GACzB,IAAMC,EAASP,EAAQM,GACvB,QAAeE,IAAXD,GAIJ,GAAsB,YAAlBxC,EAAS0C,KAAoB,CAC7B,IAAMV,EAAIhC,EAASiC,QAAQU,QAAQH,GAC/BR,GAAK,GACLK,GAAS,EACTD,EAAQG,GAAS,YAAcC,EAAd,0BAAwDR,EAAI,wBAA0BhC,EAASiC,QAAQW,KAAK,MAAQ,MAErIR,EAAQG,GAAS,yEAA2EvC,EAASiC,QAAQW,KAAK,MAAQ,UAE3H,GAAsB,aAAlB5C,EAAS0C,KAAqB,CACrC,IAAMG,EAAkB7C,EAASiC,QAAQa,QAAO,SAAAC,GAAC,OAAIP,EAAOQ,SAASD,MACjEF,EAAgBzC,OAAS,GACzBiC,GAAS,EACTD,EAAQG,GAAS,YAAcC,EAAS,aAAgBK,EAAgB,GAAK,gBAAmBN,EAAQ,wBAA0BvC,EAASiC,QAAQW,KAAK,MAAQ,MAEhKR,EAAQG,GAAS,mEAAqEvC,EAASiC,QAAQW,KAAK,MAAQ,WAjBxHR,EAAQG,GAAS,uBAA0C,YAAlBvC,EAAS0C,KAAqB,kBAAoB,kBAAoB,qBAAuB1C,EAASiC,QAAQW,KAAK,MAAQ,QAqB5K,EAAKtC,SAAS,CACV+B,MAAOA,EACPD,QAASA,KArDb,EAAKrC,MAAQ,CACTkC,QAAS,GACTI,MAAO,KACPD,QAAS,IALE,E,gEASE,IACTD,EAAcpB,KAAKlB,MAAnBsC,UACRpB,KAAKT,SAAS,CACV2B,QAASE,EAAUc,KAAI,SAAAC,GAAI,MAAI,MAC/Bd,QAASD,EAAUc,KAAI,SAAAC,GAAI,MAAI,U,+BA8C7B,IAAD,OACGf,EAAcpB,KAAKlB,MAAnBsC,UADH,EAE+BpB,KAAKhB,MAAjCkC,EAFH,EAEGA,QAASI,EAFZ,EAEYA,MAAOD,EAFnB,EAEmBA,QACxB,OACI,yBAAKpB,MAAO,CAACC,OAAQ,oBACjB,+FACCkB,EAAUc,KAAI,SAACjD,EAAUgC,GACtB,OAAO,yBAAKhB,MAAO,CAACmC,aAAc,KAC9B,uCAAanB,EAAE,EAAf,KAAoBhC,EAASA,UAC7B,yBAAKgB,MAAO,CAACoC,QAAS,OAAQC,cAAe,QAA7C,oBACsBrB,EAAE,EADxB,KAC4B,kBAAC,IAAD,CAAOhB,MAAO,CAACK,MAAO,KAAMX,MAAOuB,EAAQD,GAAId,SAAU,SAAAV,GAAC,OAAI,EAAKuB,aAAavB,EAAGwB,MAC1GI,EAAQJ,QAIrB,4BAAQL,QAASZ,KAAKmB,QAAtB,UACA,4CACiBG,EADjB,IACyBF,EAAU/B,a,GA7EZwB,IAAMC,YCAxBC,GAFFnC,IAAXD,O,kDAGJ,WAAYG,GAAQ,IAAD,8BACf,cAAMA,IASVyD,UAAY,WAAO,IAAD,EACK,EAAKvD,MAClBgD,EAFQ,EACNQ,GAEFC,EAHQ,EACFC,GAGZ,GAAgB,GAAZV,EAAE3C,OAAa,OAAOoD,EAAEpD,OAC5B,GAAgB,GAAZoD,EAAEpD,OAAa,OAAO2C,EAAE3C,OAE5B,IAGI4B,EAMA0B,EATAC,EAAS,GAIb,IAAK3B,EAAI,EAAGA,GAAKwB,EAAEpD,OAAQ4B,IACvB2B,EAAO3B,GAAK,CAACA,GAKjB,IAAK0B,EAAI,EAAGA,GAAKX,EAAE3C,OAAQsD,IACvBC,EAAO,GAAGD,GAAKA,EAInB,IAAK1B,EAAI,EAAGA,GAAKwB,EAAEpD,OAAQ4B,IACvB,IAAK0B,EAAI,EAAGA,GAAKX,EAAE3C,OAAQsD,IACnBF,EAAEI,OAAO5B,EAAI,IAAMe,EAAEa,OAAOF,EAAI,GAChCC,EAAO3B,GAAG0B,GAAKC,EAAO3B,EAAI,GAAG0B,EAAI,GAEjCC,EAAO3B,GAAG0B,GAAKG,KAAKC,IAAIH,EAAO3B,EAAI,GAAG0B,EAAI,GAAK,EAC3CG,KAAKC,IAAIH,EAAO3B,GAAG0B,EAAI,GAAK,EACxBC,EAAO3B,EAAI,GAAG0B,GAAK,IAKvC,IAAMK,EAAMJ,EAAOH,EAAEpD,QAAQ2C,EAAE3C,QAAU2C,EAAE3C,OACvC2D,EAAM,GACN,EAAKzD,SAAS,CACV0D,SAAS,EACT3B,MAAO0B,IAGX,EAAKzD,SAAS,CACV0D,SAAS,EACT3B,MAAO0B,KArDA,EA0DnBE,SAAW,SAACzD,GACR,EAAKF,SAAS,CACViD,GAAI/C,EAAEC,OAAOC,MAAMI,cAAcoD,UA5DtB,EAgEnBC,SAAW,SAAC3D,GACR,EAAKF,SAAS,CACVmD,GAAIjD,EAAEC,OAAOC,MAAMI,cAAcoD,UAhErC,EAAKnE,MAAQ,CACTwD,GAAI,GACJE,GAAI,GACJpB,MAAO,EACP2B,SAAS,GANE,E,qDAsET,IAAD,EAC8BjD,KAAKhB,MAAhCwD,EADH,EACGA,GAAIE,EADP,EACOA,GAAIpB,EADX,EACWA,MAAO2B,EADlB,EACkBA,QACvB,OACI,yBAAKhD,MAAO,CAACC,OAAQ,oBACjB,yKADJ,OAEQ,kBAAC,IAAD,CAAOP,MAAO6C,EAAIa,GAAI,EAAGlD,SAAUH,KAAKkD,WAFhD,OAGQ,kBAAC,IAAD,CAAOvD,MAAO+C,EAAIW,GAAI,EAAGlD,SAAUH,KAAKoD,WAC5C,4BAAQxC,QAASZ,KAAKuC,WAAtB,aACCjB,EALL,KAKc2B,EAAU,UAAY,mB,GA/ETpC,IAAMC,YCEzCwC,EAAS,CACTC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,iBAGnBC,GAAY,EAEKC,E,kDACjB,WAAYhF,GAAQ,IAAD,8BACf,cAAMA,IAqBVC,YAAc,SAACE,EAAUC,EAAYC,GAAqB,IAC9CiC,EAAc,EAAKpC,MAAnBoC,UACRA,EAAU9B,KAAK,CAAC,SAAYL,EAAU,QAAWE,EAAiB,KAAQD,IAC1E,EAAK6E,aAAaC,IAAI5C,IAvBtB,EAAKpC,MAAQ,CACToC,UAAW,IAHA,E,gEAQf,IAAM6C,EAAOjE,KACT6D,IACAK,IAAIC,cAAcb,GAClBO,GAAY,EACZ7D,KAAK+D,aAAeK,IAASC,WAAWC,IAAI,aAC5CtE,KAAK+D,aAAaQ,GAAG,SAAS,SAAAC,GAC1B,IAAMC,EAAOC,OAAOD,KAAKD,EAASG,OAClCV,EAAK1E,SAAS,CACV6B,UAAWqD,EAAKvC,KAAI,SAAA0C,GAAG,OAAIJ,EAASG,MAAMC,c,+BAYhD,IACExD,EAAcpB,KAAKhB,MAAnBoC,UACR,OACI,6BACI,yBAAKnB,MAAO,CAACC,OAAQ,oBACjB,sEACCkB,EAAUc,KAAI,SAAC2C,EAAG5D,GACf,OAAO,6BACFA,EADE,KACG4D,EAAE5F,SADL,IACgB4F,EAAElD,KADlB,KAC0BkD,EAAE3D,SAAW2D,EAAE3D,QAAQW,KAAK,MADtD,SAKf,kBAAC,EAAD,CAAiB9C,YAAaiB,KAAKjB,cACnC,kBAAC,EAAD,CAAWqC,UAAWA,IACtB,kBAAC,EAAD,W,GA3CkBP,IAAMC,W,OCNzBgE,MARf,WACE,OACE,yBAAKC,UAAU,OACX,kBAAC,EAAD,QCKYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.96dcafb9.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Select, List} from 'antd';\n\nconst { Option } = Select;\n\nexport default class QuestionCreator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: '',\n            answerType: 'exactly',\n            possibleAnswers: [],\n            newAnswer: '',\n        };\n    }\n\n    addQuestion = () => {\n        let { question, answerType, possibleAnswers, newAnswer } = this.state;\n        if (newAnswer.length > 0) {\n            possibleAnswers.push(newAnswer);\n        }\n        this.props.addQuestion(question, answerType, possibleAnswers);\n        this.setState({\n            question: '',\n            possibleAnswers: [],\n            newAnswer: '',\n        })\n    };\n\n    changeQuestion = (e) => {\n        this.setState({\n            question: e.target.value\n        })\n    }\n\n    changeNewAnswer = (e) => {\n        this.setState({\n            newAnswer: e.target.value\n        })\n    }\n\n    changeAnswerType = (e) => {\n        this.setState({\n            answerType: e\n        })\n    }\n\n    addPossibleAnswer = (e) => {\n        const { possibleAnswers } = this.state;\n        this.setState({\n            possibleAnswers: [...possibleAnswers, e.target.value.toLowerCase()],\n            newAnswer: '',\n        })\n    };\n\n    render() {\n        const { question, answerType, possibleAnswers, newAnswer } = this.state;\n        return (\n            <div style={{border: '2px solid black'}}>\n                <h1>Below you can create a new question</h1>\n                <div>\n                    <h3>Question: </h3><Input value={question} onChange={this.changeQuestion} placeholder=\"Question\" style={{height: 40}}/>\n                    <h3>Answer Type: </h3><Select value={answerType} style={{width: 120, height: 40}} onChange={this.changeAnswerType}>\n                        <Option value=\"exactly\">Is Exactly...</Option>\n                        <Option value=\"contains\">Contains...</Option>\n                    </Select>\n                    <br/>\n                    <h3>Possible answers: </h3><div>\n                        {possibleAnswers.length === 0 ? \"No answer options yet...\" : <List\n                            dataSource={possibleAnswers}\n                            renderItem={item => (\n                                <List.Item>{item}\n                                </List.Item>\n                            )}\n                        />}\n                        <div>\n                            Input an answer (Enter to add it to the list):\n                            <Input style={{width: 400}} onPressEnter={this.addPossibleAnswer} value={newAnswer} onChange={this.changeNewAnswer} placeholder=\"Answer\" />\n                        </div>\n                    </div>\n\n                </div>\n                <button onClick={this.addQuestion}>Add</button>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Input, Select, List} from 'antd';\n\nconst { Option } = Select;\n\nexport default class Questions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            answers: [],\n            score: null,\n            results: [],\n        };\n    }\n\n    componentDidMount() {\n        const { questions } = this.props;\n        this.setState({\n            answers: questions.map(elem => ''),\n            results: questions.map(elem => ''),\n        })\n    }\n\n    updateAnswer = (e, i) => {\n        let { answers } = this.state;\n        answers[i] = e.target.value.toLowerCase();\n        this.setState({\n            answers: answers,\n        })\n    };\n\n    submit = () => {\n        const { questions } = this.props;\n        let { answers, results } = this.state;\n        let score = 0;\n        questions.forEach((question, index) => {\n            const answer = answers[index];\n            if (answer === undefined) {\n                results[index] = \"Answer should have \" +(question.type === 'exactly' ? 'exactly matched' : 'matched one of') + \" answer choices ([\" + question.answers.join(\", \") + \"])\"\n                return;\n            }\n            if (question.type === 'exactly') {\n                const i = question.answers.indexOf(answer);\n                if (i >= 0) {\n                    score += 1;\n                    results[index] = \"CORRECT! \" + answer + \" exactly matches \" + \"index \" + i + \" of answer choices ([\" + question.answers.join(\", \") + \"])\";\n                } else {\n                    results[index] = \"INCORRECT! Answer should have exactly matched one of answer choices ([\" + question.answers.join(\", \") + \"])\"\n                }\n            } else if (question.type === 'contains') {\n                const filteredAnswers = question.answers.filter(a => answer.includes(a));\n                if (filteredAnswers.length > 0) {\n                    score += 1;\n                    results[index] = \"CORRECT! \" + answer + \"contains \\\"\" + filteredAnswers[0] + \"\\\" from index \" + index + \" of answer choices ([\" + question.answers.join(\", \") + \"])\";\n                } else {\n                    results[index] = \"INCORRECT! Answer should have contained one of answer choices ([\" + question.answers.join(\", \") + \"])\"\n                }\n            }\n        });\n        this.setState({\n            score: score,\n            results: results,\n        })\n    };\n\n    render() {\n        const { questions } = this.props;\n        const { answers, score, results } = this.state;\n        return (\n            <div style={{border: '2px solid black'}}>\n                <h1>Below is the example quiz, based on the questions created above</h1>\n                {questions.map((question, i) => {\n                    return <div style={{marginBottom: 50}}>\n                        <p>Question {i+1}: {question.question}</p>\n                        <div style={{display: 'flex', flexDirection: 'row'}}>\n                            Your answer for q{i+1}: <Input style={{width: 500}} value={answers[i]} onChange={e => this.updateAnswer(e, i)} />\n                            {results[i]}\n                        </div>\n                    </div>\n                })}\n                <button onClick={this.submit}>Submit</button>\n                <div>\n                    Your score: {score}/{questions.length}\n                </div>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Input, Select, List} from 'antd';\n\nconst { Option } = Select;\n\nexport default class Questions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            s1: '',\n            s2: '',\n            score: 0,\n            similar: false,\n        };\n    }\n\n    calculate = () => {\n        const { s1, s2 } = this.state;\n        const a = s1;\n        const b = s2;\n        if (a.length == 0) return b.length;\n        if (b.length == 0) return a.length;\n\n        var matrix = [];\n\n        // increment along the first column of each row\n        var i;\n        for (i = 0; i <= b.length; i++) {\n            matrix[i] = [i];\n        }\n\n        // increment each column in the first row\n        var j;\n        for (j = 0; j <= a.length; j++) {\n            matrix[0][j] = j;\n        }\n\n        // Fill in the rest of the matrix\n        for (i = 1; i <= b.length; i++) {\n            for (j = 1; j <= a.length; j++) {\n                if (b.charAt(i - 1) == a.charAt(j - 1)) {\n                    matrix[i][j] = matrix[i - 1][j - 1];\n                } else {\n                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\n                        Math.min(matrix[i][j - 1] + 1, // insertion\n                            matrix[i - 1][j] + 1)); // deletion\n                }\n            }\n        }\n\n        const ans = matrix[b.length][a.length] / a.length;\n        if (ans < 0.4) {\n            this.setState({\n                similar: true,\n                score: ans,\n            })\n        } else {\n            this.setState({\n                similar: false,\n                score: ans,\n            })\n        }\n    }\n\n    updates1 = (e) => {\n        this.setState({\n            s1: e.target.value.toLowerCase().trim(),\n        })\n    };\n\n    updates2 = (e) => {\n        this.setState({\n            s2: e.target.value.toLowerCase().trim(),\n        })\n    };\n\n    render() {\n        const { s1, s2, score, similar } = this.state;\n        return (\n            <div style={{border: '2px solid black'}}>\n                <h1>This is a test view of the (Levenshtein Distance / length of first string) to test similarity of strings. Threshold set at 0.4 currently.</h1>\n                s1: <Input value={s1} id={0} onChange={this.updates1} />\n                s2: <Input value={s2} id={1} onChange={this.updates2} />\n                <button onClick={this.calculate}>Calculate</button>\n                {score}: {similar ? \"similar\" : \"NOT similar\"}\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport app from 'firebase/app';\nimport firebase from 'firebase';\nimport QuestionCreator from \"./QuestionCreator\";\nimport Questions from \"./Questions\";\nimport LevenshteinDistance from \"./LevenshteinDistance\";\n\nvar config = {\n    apiKey: \"AIzaSyBfCWC3nO4Dm6t_Mdi023zABHHKzrOdQkI\",\n    authDomain: \"trivia-7b47d.firebaseapp.com\",\n    databaseURL: \"https://trivia-7b47d.firebaseio.com\",\n    projectId: \"trivia-7b47d\",\n    storageBucket: \"trivia-7b47d.appspot.com\",\n    messagingSenderId: \"1017757056711\",\n};\n\nlet firstTime = true;\n\nexport default class Host extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n        };\n    }\n\n    componentDidMount() {\n        const self = this;\n        if (firstTime) {\n            app.initializeApp(config);\n            firstTime = false;\n            this.questionsRef = firebase.database().ref('questions');\n            this.questionsRef.on('value', snapshot => {\n                const keys = Object.keys(snapshot.val());\n                self.setState({\n                    questions: keys.map(key => snapshot.val()[key]),\n                });\n            });\n        }\n    }\n\n    addQuestion = (question, answerType, possibleAnswers) => {\n        const { questions } = this.state;\n        questions.push({\"question\": question, \"answers\": possibleAnswers, \"type\": answerType});\n        this.questionsRef.set(questions);\n    };\n\n    render() {\n        const { questions } = this.state;\n        return (\n            <div>\n                <div style={{border: '2px solid black'}}>\n                    <h1>Below are all the question and answers</h1>\n                    {questions.map((q, i) => {\n                        return <div>\n                            {i}: {q.question} {q.type} [{q.answers && q.answers.join(', ')}]\n                        </div>\n                    })}\n                </div>\n                <QuestionCreator addQuestion={this.addQuestion}/>\n                <Questions questions={questions} />\n                <LevenshteinDistance/>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport Host from \"./components/Host\";\nimport 'antd/dist/antd.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Host/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}